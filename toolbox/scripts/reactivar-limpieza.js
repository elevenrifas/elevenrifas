#!/usr/bin/env node

/**
 * üü¢ SCRIPT PARA REACTIVAR EL SISTEMA DE LIMPIEZA AUTOM√ÅTICA
 * 
 * Este script reactiva el sistema de limpieza autom√°tica
 * descomentando la l√≠nea en layout.tsx.
 */

const fs = require('fs');
const path = require('path');

console.log('üü¢ REACTIVANDO SISTEMA DE LIMPIEZA AUTOM√ÅTICA...\n');

// Funci√≥n para descomentar la l√≠nea de limpieza en layout.tsx
function descomentarLimpieza() {
  const layoutPath = path.join(__dirname, '../../app/layout.tsx');
  
  try {
    // Leer el archivo
    let contenido = fs.readFileSync(layoutPath, 'utf8');
    
    // Buscar la l√≠nea comentada
    const lineaComentada = contenido.includes('// iniciarLimpiezaAutomatica(2)');
    
    if (!lineaComentada) {
      console.log('‚úÖ La l√≠nea de limpieza ya est√° activa o no existe');
      return;
    }
    
    // Descomentar la l√≠nea
    const contenidoModificado = contenido.replace(
      /\/\/ iniciarLimpiezaAutomatica\(2\);\s*\/\/ PAUSADO TEMPORALMENTE/g,
      'iniciarLimpiezaAutomatica(2); // Cada 2 minutos'
    );
    
    // Escribir el archivo modificado
    fs.writeFileSync(layoutPath, contenidoModificado, 'utf8');
    
    console.log('‚úÖ L√≠nea de limpieza descomentada exitosamente');
    console.log('üìù Archivo modificado: app/layout.tsx');
    
  } catch (error) {
    console.error('‚ùå Error al modificar el archivo:', error.message);
    console.log('\nüí° Modificaci√≥n manual requerida:');
    console.log('   1. Abre app/layout.tsx');
    console.log('   2. Busca la l√≠nea: // iniciarLimpiezaAutomatica(2); // PAUSADO TEMPORALMENTE');
    console.log('   3. Descom√©ntala: iniciarLimpiezaAutomatica(2);');
  }
}

// Funci√≥n para eliminar archivo de configuraci√≥n
function eliminarConfiguracion() {
  const configPath = path.join(__dirname, '../../.limpieza-pausada');
  
  try {
    if (fs.existsSync(configPath)) {
      fs.unlinkSync(configPath);
      console.log('‚úÖ Archivo de configuraci√≥n eliminado: .limpieza-pausada');
    } else {
      console.log('‚ÑπÔ∏è No hay archivo de configuraci√≥n para eliminar');
    }
    
  } catch (error) {
    console.error('‚ùå Error al eliminar archivo de configuraci√≥n:', error.message);
  }
}

// Funci√≥n principal
function reactivarLimpieza() {
  console.log('üìã PASOS PARA REACTIVAR EL SISTEMA DE LIMPIEZA:\n');
  
  console.log('1Ô∏è‚É£ Descomentando l√≠nea de limpieza en layout.tsx...');
  descomentarLimpieza();
  
  console.log('\n2Ô∏è‚É£ Eliminando archivo de configuraci√≥n...');
  eliminarConfiguracion();
  
  console.log('\n3Ô∏è‚É£ INSTRUCCIONES COMPLETAS:');
  console.log('   ‚Ä¢ El sistema de limpieza autom√°tica ha sido REACTIVADO');
  console.log('   ‚Ä¢ Se ejecutar√° cada 2 minutos autom√°ticamente');
  console.log('   ‚Ä¢ Para mantenerlo activo: NO hagas nada');
  console.log('   ‚Ä¢ Para pausarlo nuevamente: ejecuta detener-limpieza.js');
  
  console.log('\n4Ô∏è‚É£ PR√ìXIMOS PASOS:');
  console.log('   ‚Ä¢ Det√©n la aplicaci√≥n actual (Ctrl+C)');
  console.log('   ‚Ä¢ Reinicia la aplicaci√≥n (npm run dev)');
  console.log('   ‚Ä¢ El sistema de limpieza se iniciar√° autom√°ticamente');
  
  console.log('\n5Ô∏è‚É£ VERIFICACI√ìN:');
  console.log('   ‚Ä¢ El sistema se ejecutar√° cada 2 minutos');
  console.log('   ‚Ä¢ Puedes verificar el estado con: node toolbox/scripts/pausar-limpieza.js');
  console.log('   ‚Ä¢ Los logs mostrar√°n: "üßπ INICIANDO SISTEMA DE LIMPIEZA AUTOM√ÅTICA"');
  
  console.log('\n‚úÖ SISTEMA DE LIMPIEZA REACTIVADO EXITOSAMENTE');
}

// Ejecutar script
reactivarLimpieza();
