{"_id":"gifshot","_rev":"14-3f977512c5668bcb22612375fcb033a6","name":"gifshot","description":"JavaScript library that can create animated gifs from video streams (e.g. webcam), existing videos (e.g. mp4), or existing images","dist-tags":{"latest":"0.4.5"},"versions":{"0.1.1":{"name":"gifshot","version":"0.1.1","description":"JavaScript library that can create animated gifs from video streams (e.g. webcam), existing videos (e.g. mp4), or existing images","main":"./build/gifshot","repository":{"type":"git","url":"https://github.com/yahoo/gifshot.git"},"keywords":["gif","animated gif","WebRTC","getUserMedia"],"contributors":[{"name":"Chase West"},{"name":"Greg Franko"}],"scripts":{"preview":"node demo/server/server.js","build":"gulp","watch":"gulp watch","test":"gulp test"},"precommit":["build"],"devDependencies":{"amdclean":"latest","chai":"^1.9.1","express":"^4.2.0","gulp":"^3.8.8","gulp-insert":"^0.3.0","gulp-install":"^0.2.0","gulp-istanbul":"^0.3.1","gulp-mocha":"^1.1.0","gulp-rename":"^1.2.0","gulp-rimraf":"^0.1.0","gulp-uglify":"^0.3.0","jshint":"^2.5.6","lodash":"^2.4.1","precommit-hook":"^1.0.7","requirejs":"^2.1.11"},"engine":{"node":">= 0.8"},"license":"MIT","bugs":{"url":"https://github.com/yahoo/gifshot/issues"},"homepage":"https://github.com/yahoo/gifshot","_id":"gifshot@0.1.1","dist":{"shasum":"a0bb5ab537cd6f260346fa44565ff70e1c0b7a12","tarball":"https://registry.npmjs.org/gifshot/-/gifshot-0.1.1.tgz","integrity":"sha512-gfT0Nqj63IId/pY+/gNGLFq3jVBjpHhRBJSmsEmJynYvjJV1ij1z92lIG77HcOY8wV71ajq0XG8WXlcdLEalag==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIEacG/ST9C87YRhxNoMnvoLO+yzQJNGL9t8bP3VjF5erAiBdzmKII6ZxfNY0wJ6RX+Qu5j7x0JeAeJDw5KdrmFZ8jw=="}]},"_from":".","_npmVersion":"1.3.24","_npmUser":{"name":"gfranko","email":"gregfranko5@gmail.com"},"maintainers":[{"name":"gfranko","email":"gregfranko5@gmail.com"}]},"0.2.0":{"name":"gifshot","version":"0.2.0","description":"JavaScript library that can create animated gifs from video streams (e.g. webcam), existing videos (e.g. mp4), or existing images","main":"./build/gifshot","repository":{"type":"git","url":"git+https://github.com/yahoo/gifshot.git"},"keywords":["gif","animated gif","WebRTC","getUserMedia"],"contributors":[{"name":"Chase West"},{"name":"Greg Franko"}],"scripts":{"preview":"node demo/server/server.js","build":"gulp","watch":"gulp watch","test":"gulp test"},"precommit":["build"],"devDependencies":{"amdclean":"latest","chai":"^1.9.1","express":"^4.2.0","gulp":"^3.8.8","gulp-insert":"^0.3.0","gulp-install":"^0.2.0","gulp-istanbul":"^0.3.1","gulp-mocha":"^1.1.0","gulp-rename":"^1.2.0","gulp-rimraf":"^0.1.0","gulp-uglify":"^0.3.0","jshint":"^2.5.6","lodash":"^2.4.1","precommit-hook":"^1.0.7","requirejs":"^2.1.11"},"engine":{"node":">= 0.8"},"license":"MIT","gitHead":"00559fabb6fb37eaa7f18a981be3f6bd3b0fce78","bugs":{"url":"https://github.com/yahoo/gifshot/issues"},"homepage":"https://github.com/yahoo/gifshot#readme","_id":"gifshot@0.2.0","_shasum":"218e3cadb0a73e948f49688307a1d79610d806f3","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"gfranko","email":"gregfranko5@gmail.com"},"maintainers":[{"name":"gfranko","email":"gregfranko5@gmail.com"},{"name":"davglass","email":"davglass@gmail.com"}],"dist":{"shasum":"218e3cadb0a73e948f49688307a1d79610d806f3","tarball":"https://registry.npmjs.org/gifshot/-/gifshot-0.2.0.tgz","integrity":"sha512-6yiQohc3sceno/nDxAa7ZsS4A4aqFLvmbxC3Cjnp1fCyIUfAhL6PVOtnedBIFDOlvW+F5JPK0Zr9nMtZlyU1KA==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIG+ALE/E1ZsWJetHXCQgVCalfyGZN8fa6WeRtuuYijOwAiA5PtukmzalWQgVvpeaj3r0jo4KL8PwaK/7ZYuXM5gEdg=="}]}},"0.2.1":{"name":"gifshot","version":"0.2.1","description":"JavaScript library that can create animated gifs from video streams (e.g. webcam), existing videos (e.g. mp4), or existing images","main":"./build/gifshot","repository":{"type":"git","url":"git+https://github.com/yahoo/gifshot.git"},"keywords":["gif","animated gif","WebRTC","getUserMedia"],"contributors":[{"name":"Chase West"},{"name":"Greg Franko"}],"scripts":{"preview":"node demo/server/server.js","build":"gulp","watch":"gulp watch","test":"gulp test"},"precommit":["build"],"devDependencies":{"amdclean":"latest","chai":"^1.9.1","express":"^4.2.0","gulp":"^3.8.8","gulp-insert":"^0.3.0","gulp-install":"^0.2.0","gulp-istanbul":"^0.3.1","gulp-mocha":"^1.1.0","gulp-rename":"^1.2.0","gulp-rimraf":"^0.1.0","gulp-uglify":"^0.3.0","jshint":"^2.5.6","lodash":"^2.4.1","precommit-hook":"^1.0.7","requirejs":"^2.1.11"},"engine":{"node":">= 0.8"},"license":"MIT","gitHead":"e1a4c7db3577c826e432c9dd51a321af020f903b","bugs":{"url":"https://github.com/yahoo/gifshot/issues"},"homepage":"https://github.com/yahoo/gifshot#readme","_id":"gifshot@0.2.1","_shasum":"e24ab63b75381352bde1bac6f3ce05794214cfc5","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"gfranko","email":"gregfranko5@gmail.com"},"maintainers":[{"name":"gfranko","email":"gregfranko5@gmail.com"},{"name":"davglass","email":"davglass@gmail.com"}],"dist":{"shasum":"e24ab63b75381352bde1bac6f3ce05794214cfc5","tarball":"https://registry.npmjs.org/gifshot/-/gifshot-0.2.1.tgz","integrity":"sha512-WYPiBci+LZtEw32RbV8p7QUnYajgfMxeJ/y9ToRUYeRMm2ald3FXzo4c3+ekboHcvh+JBFBQANLQmwdYxO7Y/g==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQD8s7mGGZkW2mT29HHCJe1EtDjTpkgtfoeWbdTAYX4U4AIhAMqzaVvVYWazflqTtqCT5hj3CL3aSDHJoGymzQO4DW/0"}]}},"0.3.0":{"name":"gifshot","version":"0.3.0","description":"JavaScript library that can create animated gifs from video streams (e.g. webcam), existing videos (e.g. mp4), or existing images","main":"./build/gifshot","repository":{"type":"git","url":"git+https://github.com/yahoo/gifshot.git"},"keywords":["gif","animated gif","WebRTC","getUserMedia"],"contributors":[{"name":"Chase West"},{"name":"Greg Franko"}],"scripts":{"preview":"node demo/server/server.js","build":"gulp","watch":"gulp watch","test":"gulp test"},"precommit":["build"],"devDependencies":{"amdclean":"latest","chai":"^1.9.1","express":"^4.2.0","gulp":"^3.8.8","gulp-insert":"^0.3.0","gulp-install":"^0.2.0","gulp-istanbul":"^0.3.1","gulp-mocha":"^1.1.0","gulp-rename":"^1.2.0","gulp-rimraf":"^0.1.0","gulp-uglify":"^0.3.0","jshint":"^2.5.6","lodash":"^2.4.1","precommit-hook":"^1.0.7","requirejs":"^2.1.11"},"engine":{"node":">= 0.8"},"license":"MIT","gitHead":"b3e3c831faba5edda9dfa13b6a37f666698e89bb","bugs":{"url":"https://github.com/yahoo/gifshot/issues"},"homepage":"https://github.com/yahoo/gifshot#readme","_id":"gifshot@0.3.0","_shasum":"333fc742c45ad9c83f55d3bdf382a67d0db07d0f","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"gfranko","email":"gregfranko5@gmail.com"},"maintainers":[{"name":"gfranko","email":"gregfranko5@gmail.com"},{"name":"davglass","email":"davglass@gmail.com"}],"dist":{"shasum":"333fc742c45ad9c83f55d3bdf382a67d0db07d0f","tarball":"https://registry.npmjs.org/gifshot/-/gifshot-0.3.0.tgz","integrity":"sha512-NDp8atsbEpYpmxstmpWVlHBHeJepCp+zLbHsLWr1cgex953NRcRDuOa/rkwKoCt+CutvKDJTfpqr5gScP2X3MQ==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQCJQXvAHjyehmjEc68I0G2WqxUNQL/VlUC5LVtKq4mWkAIhALDjve6hkQZ9SKONB0Fn/YptQPL2PUyTaiMnlHaGecqp"}]}},"0.3.1":{"name":"gifshot","version":"0.3.1","description":"JavaScript library that can create animated gifs from video streams (e.g. webcam), existing videos (e.g. mp4), or existing images","main":"./build/gifshot","repository":{"type":"git","url":"git+https://github.com/yahoo/gifshot.git"},"keywords":["gif","animated gif","WebRTC","getUserMedia"],"contributors":[{"name":"Chase West"},{"name":"Greg Franko"}],"scripts":{"preview":"node demo/server/server.js","build":"gulp","watch":"gulp watch","test":"gulp test"},"precommit":["build"],"devDependencies":{"amdclean":"latest","chai":"^1.9.1","express":"^4.2.0","gulp":"^3.8.8","gulp-insert":"^0.3.0","gulp-install":"^0.2.0","gulp-istanbul":"^0.3.1","gulp-mocha":"^1.1.0","gulp-rename":"^1.2.0","gulp-rimraf":"^0.1.0","gulp-uglify":"^0.3.0","jshint":"^2.5.6","lodash":"^2.4.1","precommit-hook":"^1.0.7","requirejs":"^2.1.11"},"engine":{"node":">= 0.8"},"license":"MIT","gitHead":"4e65468fb076dd7d65db2139b161cfd7969c78d8","bugs":{"url":"https://github.com/yahoo/gifshot/issues"},"homepage":"https://github.com/yahoo/gifshot#readme","_id":"gifshot@0.3.1","_shasum":"71484a7ea46a15a9224c87c047a0f37394664865","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"gfranko","email":"gregfranko5@gmail.com"},"maintainers":[{"name":"gfranko","email":"gregfranko5@gmail.com"},{"name":"davglass","email":"davglass@gmail.com"}],"dist":{"shasum":"71484a7ea46a15a9224c87c047a0f37394664865","tarball":"https://registry.npmjs.org/gifshot/-/gifshot-0.3.1.tgz","integrity":"sha512-cULCb3sXl613sCYePv4TlJGml4a3QT3jbH3+zcrTho6yiQ1auaQx7w3z2KWAPFnKbpeQBbslp8IcFIclT42r+w==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDSlSVxNelkDFQj1w9XXDoxQLhCgDYlpjuyjZpgNEwWlgIhAKR4lkEIxE0ucFSvlbbT4lDOPFZD6vTf8SinRUUoy2FE"}]}},"0.3.2":{"name":"gifshot","version":"0.3.2","description":"JavaScript library that can create animated gifs from video streams (e.g. webcam), existing videos (e.g. mp4), or existing images","main":"./build/gifshot","repository":{"type":"git","url":"git+https://github.com/yahoo/gifshot.git"},"keywords":["gif","animated gif","WebRTC","getUserMedia"],"contributors":[{"name":"Chase West"},{"name":"Greg Franko"}],"scripts":{"preview":"node demo/server/server.js","build":"gulp","watch":"gulp watch","test":"gulp test"},"precommit":["build"],"devDependencies":{"amdclean":"latest","chai":"^1.9.1","express":"^4.2.0","gulp":"^3.8.8","gulp-insert":"^0.3.0","gulp-install":"^0.2.0","gulp-istanbul":"^0.3.1","gulp-mocha":"^1.1.0","gulp-rename":"^1.2.0","gulp-rimraf":"^0.1.0","gulp-uglify":"^0.3.0","jshint":"^2.5.6","lodash":"^2.4.1","precommit-hook":"^1.0.7","requirejs":"^2.1.11"},"engine":{"node":">= 0.8"},"license":"MIT","gitHead":"c1a36b26fa7bbf0200f906d156297874a284e9e8","bugs":{"url":"https://github.com/yahoo/gifshot/issues"},"homepage":"https://github.com/yahoo/gifshot#readme","_id":"gifshot@0.3.2","_shasum":"fd3f040f2184cee22dd95242c69d86d83fb27aa3","_from":".","_npmVersion":"2.11.3","_nodeVersion":"0.12.7","_npmUser":{"name":"gfranko","email":"gregfranko5@gmail.com"},"maintainers":[{"name":"gfranko","email":"gregfranko5@gmail.com"},{"name":"davglass","email":"davglass@gmail.com"}],"dist":{"shasum":"fd3f040f2184cee22dd95242c69d86d83fb27aa3","tarball":"https://registry.npmjs.org/gifshot/-/gifshot-0.3.2.tgz","integrity":"sha512-6dkxkorJJHpg1QD/4Lo17HVUMVrlWW0iVxcTPKhTdaYEx++YNawR2UVQkf8vc11dIuYJP1P8OGKO2+e8bxu1Kw==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQC605OtKfU4tNJvgMrgo4LAHl+AC67KKRCbimOLdm+V3QIgIke7CMM5h6zskR1PTADMWZBChgqROYicAvqaBwlYE9k="}]}},"0.4.5":{"name":"gifshot","version":"0.4.5","description":"JavaScript library that can create animated gifs from video streams (e.g. webcam), existing videos (e.g. mp4), or existing images","main":"./dist/gifshot","repository":{"type":"git","url":"git+https://github.com/yahoo/gifshot.git"},"keywords":["gif","animated gif","WebRTC","getUserMedia"],"contributors":[{"name":"Chase West"},{"name":"Greg Franko"}],"scripts":{"preview":"node demo/server/server.js","build":"gulp","watch":"gulp watch","test":"gulp test"},"precommit":["build"],"devDependencies":{"babel-plugin-external-helpers":"^6.22.0","babel-preset-env":"^1.5.2","babel-preset-es2015":"^6.24.1","chai":"^1.9.1","express":"^4.2.0","gulp":"^3.8.8","gulp-babel":"^6.1.2","gulp-iife":"^0.3.0","gulp-insert":"^0.3.0","gulp-install":"^0.2.0","gulp-mocha":"^1.1.0","gulp-rename":"^1.2.0","gulp-sequence":"^0.4.6","gulp-uglify":"^0.3.0","jshint":"latest","precommit-hook":"^1.0.7","rollup":"^0.43.0","rollup-plugin-babel":"^2.7.1","run-sequence":"^1.2.2"},"engine":{"node":">= 4.0.0"},"license":"MIT","gitHead":"97e9e5d21d5faf86a2d1e68dffe1b947056d3288","bugs":{"url":"https://github.com/yahoo/gifshot/issues"},"homepage":"https://github.com/yahoo/gifshot#readme","_id":"gifshot@0.4.5","_shasum":"e3cb570203a3b139ff3069d7578098a29c03b0f8","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.4.2","_npmUser":{"name":"gfranko","email":"gregfranko5@gmail.com"},"maintainers":[{"name":"gfranko","email":"gregfranko5@gmail.com"},{"name":"davglass","email":"davglass@gmail.com"}],"dist":{"shasum":"e3cb570203a3b139ff3069d7578098a29c03b0f8","tarball":"https://registry.npmjs.org/gifshot/-/gifshot-0.4.5.tgz","integrity":"sha512-oaOTT7patjxFFv7ptR0R0NNhqy3ZAmcLUQCjM/sTsvsQaUAlB2fHirLajcNAKJ6ufoVhdP+ZkXYvmUycHP1FNg==","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIAYVw7o4WkeiccaG3EpDUBMn994eP2xp6ccT2YiWy17nAiEA4Z5JakfsvWi5SBUorSG7dEqqKZ+kolP0+TH40sDbni4="}]},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/gifshot-0.4.5.tgz_1513620515836_0.5447347899898887"}}},"readme":"![](http://i.imgur.com/I17GUX9.gif)\n=======\n\nJavaScript library that can create animated GIFs from media streams, videos, or images\n\n\n## How\n\ngifshot uses the following technologies:\n\n- The webRTC `getUserMedia()` API to get permission to use a user's webcam and manipulate the `CameraStream` Media object\n\n- The HTML5 `Filesystem` APIs to handle the temporary blob URL creation\n\n- The HTML5 `video` element to stream the blob URL\n\n- The `canvas` API to create a dynamic image from an HTML5 video, or images\n\n- `Web workers` to process the GIF frames\n\n- `Typed Arrays` to handle binary image data\n\n- `Base 64 encoding` to create a base 64 encoded image string\n\n\n## Browser Support\n\n - **Animated GIF from Webcam** :\n\n * Firefox 17+, Chrome 21+, Opera 18+, Blackberry Browser 10+, Opera Mobile 12+, Chrome For Android 35+, Firefox for Android 29+\n\n - **Animated GIF from Existing Video** :\n\n * All modern browsers (IE10+)\n\n - **Animated GIF from Existing Images** :\n\n * All modern browsers (IE10+)\n\n\n## Quick Start\n*  Include `gifshot` on your HTML page (`gifshot.js` can be found in the `build` directory)\n\n```html\n<script src='gifshot.js'></script>\n```\n\n*  Start using the JavaScript API to create your animated GIFs\n\n```javascript\n// By default, a user's webcam is used to create the animated GIF\ngifshot.createGIF({}, function(obj) {\n  if(!obj.error) {\n    var image = obj.image,\n    animatedImage = document.createElement('img');\n    animatedImage.src = image;\n    document.body.appendChild(animatedImage);\n  }\n});\n```\n\n## Demo Set Up\n\n1.  git clone this repo: `git clone git@github.com:yahoo/gifshot.git`\n2.  Install [Node.js](http://nodejs.org/)\n3.  Install all local dependencies: `npm install`\n4.  Start up the included node.js preview server: `npm run preview`\n5.  Go to `localhost:8001` to try out gifshot\n\n![](images/screencastGIF.gif)\n\n\n## API Methods\n\n### createGIF(options, callback)\n\nCreates an animated GIF from either a webcam stream, an existing video (e.g. mp4), or existing images\n\n**Note:** If you wish to use the default options, you can just pass a callback function as the only argument\n\n**Another Note:** An object is passed back to the callback function with helpful data\n\n```javascript\ngifshot.createGIF({}, function(obj) {\n  // callback object properties\n  // --------------------------\n  // image - Base 64 image\n  // cameraStream - The webRTC MediaStream object\n  // error - Boolean that determines if an error occurred\n  // errorCode - Helpful error label\n  // errorMsg - Helpful error message\n  // savedRenderingContexts - An array of canvas image data (will only be set if the saveRenderingContexts option was used)\n});\n```\n\n### takeSnapShot(options, callback)\n\nTakes a snap shot (not animated) image from a webcam stream or existing video\n\n**Note:** If you wish to use the default options, you can just pass a callback function as the only argument\n\n**Another Note:** An object is passed back to the callback function with helpful data\n\n```javascript\ngifshot.takeSnapShot({}, function(obj) {\n  // callback object properties\n  // --------------------------\n  // image - Base 64 image\n  // error - Boolean that determines if an error occurred\n  // errorCode - Helpful error label\n  // errorMsg - Helpful error message\n  // savedRenderingContexts - An array of canvas image data (will only be set if the saveRenderingContexts option was used)\n});\n```\n\n### stopVideoStreaming()\n\nTurns off the user's webcam (by default, the user's webcam is turned off)\n\n**Note:** This is helpful when you use the `keepCameraOn` option\n\n```javascript\ngifshot.stopVideoStreaming();\n```\n\n### isSupported()\n\nIf the current browser supports all of the gifshot animated GIF options\n\n```javascript\ngifshot.isSupported();\n```\n\n### isWebCamGIFSupported()\n\nIf the current browser supports creating animated GIFs from a webcam video stream\n\n```javascript\ngifshot.isWebCamGIFSupported();\n```\n\n### isExistingVideoGIFSupported()\n\nIf the current browser supports creating animated GIFs from an existing HTML video (e.g. mp4, ogg, ogv, webm)\n\n**Note:** You can pass in an array of codec extensions to specifically check if the current browser supports at least one of them\n\n```javascript\ngifshot.isExistingVideoGIFSupported(['mp4', 'ogg']);\n```\n\n### isExistingImagesGIFSupported()\n\nIf the current browser supports creating animated GIFs from existing images (e.g. jpeg, png, gif)\n\n```javascript\ngifshot.isExistingImagesGIFSupported();\n```\n\n## Examples\n\n**Web Cam**\n\n```javascript\ngifshot.createGIF(function(obj) {\n  if(!obj.error) {\n    var image = obj.image,\n    animatedImage = document.createElement('img');\n    animatedImage.src = image;\n    document.body.appendChild(animatedImage);\n  }\n});\n```\n\n**HTML5 Video**\n\n```javascript\ngifshot.createGIF({\n  'video': ['example.mp4', 'example.ogv']\n},function(obj) {\n  if(!obj.error) {\n    var image = obj.image,\n    animatedImage = document.createElement('img');\n    animatedImage.src = image;\n    document.body.appendChild(animatedImage);\n  }\n});\n```\n\n**Images**\n\n```javascript\ngifshot.createGIF({\n  'images': ['http://i.imgur.com/2OO33vX.jpg', 'http://i.imgur.com/qOwVaSN.png', 'http://i.imgur.com/Vo5mFZJ.gif']\n},function(obj) {\n  if(!obj.error) {\n    var image = obj.image,\n    animatedImage = document.createElement('img');\n    animatedImage.src = image;\n    document.body.appendChild(animatedImage);\n  }\n});\n```\n\n**Snap Shot**\n\n```javascript\ngifshot.takeSnapShot(function(obj) {\n  if(!obj.error) {\n    var image = obj.image,\n    animatedImage = document.createElement('img');\n    animatedImage.src = image;\n    document.body.appendChild(animatedImage);\n  }\n});\n```\n\n## Options\n\n```javascript\n// Desired width of the image\n'gifWidth': 200,\n// Desired height of the image\n'gifHeight': 200,\n// If this option is used, then a GIF will be created using these images\n// e.g. ['http://i.imgur.com/2OO33vX.jpg', 'http://i.imgur.com/qOwVaSN.png', 'http://i.imgur.com/Vo5mFZJ.gif'],\n// Note: Make sure these image resources are CORS enabled to prevent any cross-origin JavaScript errors\n// Note: You may also pass a NodeList of existing image elements on the page\n'images': [],\n// If this option is used, then a gif will be created using the appropriate video\n// HTML5 video that you would like to create your animated GIF from\n// Note: Browser support for certain video codecs is checked, and the appropriate video is selected\n// Note: You may also pass a NodeList of existing video elements on the page\n// e.g. 'video': ['example.mp4', 'example.ogv'],\n'video': null,\n// You can pass an existing video element to use for the webcam GIF creation process,\n// and this video element will not be hidden (useful when used with the keepCameraOn option)\n// Pro tip: Set the height and width of the video element to the same values as your future GIF\n// Another Pro Tip: If you use this option, the video will not be paused, the object url not revoked, and\n// the video will not be removed from the DOM.  You will need to handle this yourself.\n'webcamVideoElement': null,\n// Whether or not you would like the user's camera to stay on after the GIF is created\n// Note: The cameraStream Media object is passed back to you in the createGIF() callback function\n'keepCameraOn': false,\n// Expects a cameraStream Media object\n// Note: Passing an existing camera stream will allow you to create another GIF and/or snapshot without\n//\tasking for the user's permission to access the camera again if you are not using SSL\n'cameraStream': null,\n// CSS filter that will be applied to the image (eg. blur(5px))\n'filter': '',\n// The amount of time (in seconds) to wait between each frame capture\n'interval': 0.1,\n// The amount of time (in seconds) to start capturing the GIF (only for HTML5 videos)\n'offset': null,\n// The number of frames to use to create the animated GIF\n// Note: Each frame is captured every 100 milleseconds of a video and every ms for existing images\n'numFrames': 10,\n// The amount of time (10 = 1s) to stay on each frame\n'frameDuration': 1,\n// The text that covers the animated GIF\n'text': '',\n// The font weight of the text that covers the animated GIF\n'fontWeight': 'normal',\n// The font size of the text that covers the animated GIF\n'fontSize': '16px',\n// The minimum font size of the text that covers the animated GIF\n// Note: This option is only applied if the text being applied is cut off\n'minFontSize': '10px',\n// Whether or not the animated GIF text will be resized to fit within the GIF container\n'resizeFont': false,\n// The font family of the text that covers the animated GIF\n'fontFamily': 'sans-serif',\n// The font color of the text that covers the animated GIF\n'fontColor': '#ffffff',\n// The horizontal text alignment of the text that covers the animated GIF\n'textAlign': 'center',\n// The vertical text alignment of the text that covers the animated GIF\n'textBaseline': 'bottom',\n// The X (horizontal) Coordinate of the text that covers the animated GIF (only use this if the default textAlign and textBaseline options don't work for you)\n'textXCoordinate': null,\n// The Y (vertical) Coordinate of the text that covers the animated GIF (only use this if the default textAlign and textBaseline options don't work for you)\n'textYCoordinate': null,\n// Callback function that provides the current progress of the current image\n'progressCallback': function(captureProgress) {},\n// Callback function that is called when the current image is completed\n'completeCallback': function() {},\n// how many pixels to skip when creating the palette. Default is 10. Less is better, but slower.\n// Note: By adjusting the sample interval, you can either produce extremely high-quality images slowly, or produce good images in reasonable times.\n// With a sampleInterval of 1, the entire image is used in the learning phase, while with an interval of 10,\n// a pseudo-random subset of 1/10 of the pixels are used in the learning phase. A sampling factor of 10 gives a\n// substantial speed-up, with a small quality penalty.\n'sampleInterval': 10,\n// how many web workers to use to process the animated GIF frames. Default is 2.\n'numWorkers': 2,\n// Whether or not you would like to save all of the canvas image binary data from your created GIF\n// Note: This is particularly useful for when you want to re-use a GIF to add text to later\n'saveRenderingContexts': false,\n// Expects an array of canvas image data\n// Note: If you set the saveRenderingContexts option to true, then you get the savedRenderingContexts\n//\tin the createGIF callback function\n'savedRenderingContexts': []\n// When existing images or videos are requested used, we set a CORS attribute on the request.\n// Options are 'Anonymous', 'use-credentials', or a falsy value (like '') to not set a CORS attribute.\n'crossOrigin': 'Anonymous'\n```\n\n## Contributing\n\nPlease send all PR's to the `dev` branch.\n\nIf your PR is a code change:\n\n1.  Install all node.js dev dependencies: `npm install`\n2.  Update the appropriate module inside of the `src/modules` directory.\n3.  Install gulp.js globally: `sudo npm install gulp -g`\n4.  Build, Test, and Minify gifshot with Gulp: `gulp`\n5.  Verify that the minified output file has been updated in `dist/gifshot.js` and `dist/gifshot.min.js` and that no unit tests are failing.\n6.  Send the PR!\n\n**Note:** There is a gulp `watch` task set up that will automatically build, test, and minify gifshot whenever a module inside of the `src/modules` directory is changed.  We recommend using it.\n\n\n## Credits\n\ngifshot would not have been possible without the help/inspiration of the following libraries/awesome people:\n\n### Used\n\n- [NeuQuant](http://members.ozemail.com.au/~dekker/NEUQUANT.HTML)\n * An image quantization algorithm to reduce the number of colors required to represent the image (thus decreasing the file size). This script was ported from C into Java by Kevin Weiner and then to [ActionScript 3](http://www.bytearray.org/?p=93) by Thibault Imbert, and to [JavaScript](http://antimatter15.com/wp/2010/07/javascript-to-animated-gif/) by antimatter15, and fixed, patched and revised by [sole](http://soledadpenades.com).\n * Copyright (c) Anthony Dekker 1994 - [MIT License](http://members.ozemail.com.au/~dekker/NEUQUANT.C)\n\n\n- [Dean McNamee](https://github.com/deanm)'s [omggif](https://github.com/deanm/omggif)\n * Encodes a GIF into the GIF89 spec\n * Copyright (c) Dean McNamee, 2013 - [MIT License](https://github.com/deanm/omggif)\n\n\n### Inspiration\n\n- [Soledad Penadés](https://github.com/sole)'s [gumhelper.js](https://github.com/sole/gumhelper)\n * A module wrapping WebRTC's getUserMedia\n\n- [Soledad Penadés](https://github.com/sole)'s [animated_GIF.js](https://github.com/sole/Animated_GIF)\n * Uses web workers and encoding/decoding algorithms to produce a Base 64 data URI image\n\n- [Jen Fong-Adwent](https://github.com/ednapiranha)'s (aka Edna Piranha) [Meatspace Chat](https://chat.meatspac.es/)\n\n## Contributors\n\n#### [Chase West](https://github.com/ChaseWest)\n![](images/chase_west.gif)\n\n#### [Greg Franko](https://github.com/gfranko)\n![](images/greg_franko.gif)\n\n#### [Chris Chernoff](https://github.com/chrischernoff)\n![](images/chris_chernoff.gif)\n","maintainers":[{"name":"gfranko","email":"gregfranko5@gmail.com"},{"name":"davglass","email":"davglass@gmail.com"}],"time":{"modified":"2022-06-18T08:18:38.346Z","created":"2015-03-03T10:01:14.288Z","0.1.1":"2015-03-03T10:01:14.288Z","0.2.0":"2015-08-05T00:16:07.229Z","0.2.1":"2015-08-05T17:13:55.147Z","0.3.0":"2015-08-23T19:15:30.439Z","0.3.1":"2015-08-23T20:17:26.876Z","0.3.2":"2015-08-26T05:34:45.548Z","0.4.5":"2017-12-18T18:08:37.063Z"},"homepage":"https://github.com/yahoo/gifshot#readme","keywords":["gif","animated gif","WebRTC","getUserMedia"],"repository":{"type":"git","url":"git+https://github.com/yahoo/gifshot.git"},"contributors":[{"name":"Chase West"},{"name":"Greg Franko"}],"bugs":{"url":"https://github.com/yahoo/gifshot/issues"},"license":"MIT","readmeFilename":"README.md","users":{"timdp":true,"klombomb":true,"taivare":true}}