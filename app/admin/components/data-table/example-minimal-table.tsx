"use client"

import * as React from "react"
import { ColumnDef } from "@tanstack/react-table"
import { createCRUDTable } from "./DataTableEnhanced"

// =====================================================
// üéØ EJEMPLO DE TABLA M√çNIMA - ELEVEN RIFAS
// =====================================================
// Esta tabla demuestra lo m√≠nimo que necesitas para crear
// una tabla completa con todas las funcionalidades
// =====================================================

// Tipo de datos
interface Usuario {
  id: string
  nombre: string
  email: string
  rol: string
}

// Props m√≠nimas
interface UsuariosTableProps {
  onCreate?: () => void
  onEdit?: (usuario: Usuario) => void
  onDelete?: (usuario: Usuario) => void
}

// Componente principal - ¬°S√öPER SIMPLE!
export function UsuariosTable({ onCreate, onEdit, onDelete }: UsuariosTableProps) {
  // Solo lo esencial: datos y funciones
  const [usuarios, setUsuarios] = React.useState<Usuario[]>([
    { id: "1", nombre: "Juan P√©rez", email: "juan@example.com", rol: "Admin" },
    { id: "2", nombre: "Mar√≠a Garc√≠a", email: "maria@example.com", rol: "Usuario" }
  ])

  // Funciones m√≠nimas requeridas
  const handleRefresh = () => {
    console.log("üîÑ Refrescando usuarios...")
  }

  const handleExport = () => {
    console.log("üì§ Exportando usuarios...")
  }

  // Columnas de la tabla
  const columns: ColumnDef<Usuario>[] = [
    {
      accessorKey: "nombre",
      header: "Nombre",
    },
    {
      accessorKey: "email",
      header: "Email",
    },
    {
      accessorKey: "rol",
      header: "Rol",
    },
  ]

  // ¬°SOLO ESTO NECESITAS! Todo lo dem√°s viene autom√°ticamente
  return createCRUDTable({
    columns,
    data: usuarios,
    title: "Usuarios",
    description: "Gestiona los usuarios del sistema",
    searchKey: "nombre",
    searchPlaceholder: "Buscar usuarios...",
    onRefresh: handleRefresh,
    onExport: handleExport,
    onCreate: onCreate || (() => {})
  })
}

// =====================================================
// üéØ COMPARACI√ìN: ANTES vs DESPU√âS
// =====================================================

// ANTES (cada tabla defin√≠a todo):
/*
{createCRUDTable({
  columns: columns,
  data: data,
  title: "Mi Tabla",
  description: "Descripci√≥n",
  searchKey: "nombre",
  searchPlaceholder: "Buscar...",
  pageSize: 10,
  showPagination: true,
  showToolbar: true,
  showSearch: true,
  showColumnToggle: true,
  showRowSelection: true,
  enableSorting: true,
  enableColumnFilters: true,
  enableRowSelection: true,
  enableGlobalFilter: true,
  loading: loading,
  error: error,
  onRowSelectionChange: handleSelection,
  onRefresh: handleRefresh,
  onExport: handleExport,
  onCreate: handleCreate
})}
*/

// DESPU√âS (solo lo esencial):
/*
{createCRUDTable({
  columns,
  data,
  title: "Mi Tabla",
  description: "Descripci√≥n",
  searchKey: "nombre",
  searchPlaceholder: "Buscar...",
  loading,
  error,
  onRefresh: handleRefresh,
  onExport: handleExport,
  onCreate: handleCreate
})}
*/

// =====================================================
// üéØ LO QUE SE GENERA AUTOM√ÅTICAMENTE
// =====================================================
// ‚úÖ Bot√≥n Crear (si hay onCreate)
// ‚úÖ Bot√≥n Refrescar (si hay onRefresh)  
// ‚úÖ Bot√≥n Exportar (si hay onExport)
// ‚úÖ Paginaci√≥n (por defecto)
// ‚úÖ Toolbar con b√∫squeda (por defecto)
// ‚úÖ Toggle de columnas (por defecto)
// ‚úÖ Ordenamiento (por defecto)
// ‚úÖ Filtros (por defecto)
// ‚úÖ Estados de loading y error
// ‚úÖ Selecci√≥n de filas (si se necesita)
// ‚úÖ Header con t√≠tulo y descripci√≥n
// ‚úÖ Acciones en el header
// =====================================================

